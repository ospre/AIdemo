Welcome to the Demo Environment, setup video, everybody. So if you intend to follow and complete the demos in this course yourself, this is the video for you because we are going to be setting up our AWS account ready to complete the demos, and it is important to follow this, just your account is all ready to go and it means you can jump straight into the demos that we're going to be doing in this course. So what I have here is a brand new vanilla AWS account. Now, you don't have to use a brand new vanilla account like I am, but I just want it to start from a known point. So all of you there who are watching know that there's nothing already set up here. We're going to do everything from scratch. Now before we do anything, it's important that you pick a region to work in and stick with it as when we enable the bedrock models, for example, that are only accessible within the region our console is operating in. 



So if you then go and set up other resources like SageMaker Studio that needs to be able to access those bedrock models and it's in another region, they won't be able to access those models. So you do need to pick a region in which Bedrock operates. So for our demos, we're going to stick with the default region, which is US East One, also known as North Virginia. So let's start things off by getting access to the bedrock models that we're going to need for all of the demos that follow. So in the console, I'm going to start by going to the Amazon Bedrock service, which I've recently visited here. Alternatively, we can search for it up the top in the search bar. We're now in the Bedrock console. We're going to go over to the left hand menu and click the hamburger icon and scroll all the way to the bottom. 

And you'll see there is a link called Model Access, which says one new, Ooh, I wonder what that new model is all about. We're going to learn about that very shortly. Click model access. And what we can see here is all of the base foundation models which are available in the Amazon Bedrock service. So we need to enable a selection of these, the ones that we are going to be using throughout the demos in this course. So we'll click manage model Access, and now we just tick the models that we need for our demos. So we are going to tick Jurassic two Ultra Jurassic two mid under the Amazon models Titan Embeddings, G one Text Titan text G one Light Titan text G one Express Titan Image generator G one under Anthro clawed three sonnet, which is actually the new model that was being talked about down here, which is quite exciting. Claude three is a real cutting edge model, so it's going to be quite fun to play around with that during our demos. And then we have clawed and also clawed Instant. And if we scroll all the way to the bottom under stability ai, we also want the SD xl, which stands for Stable Diffusion extra Large 1.0 Model. Once all of these are ticked, click a request model access 

And you'll see that it grants access immediately. So it says request access, which kind of implies that you need to wait for it to be approved, but approval is immediate as you can see here. So we've been granted access to all of those models that we just asked for. So we have access to our Bedrock Foundation models. Now the next thing that we need to do is set up a SageMaker studio domain because many of the demos in this course are going to be using Jupiter notebooks within SageMaker Studio. So up in our search bar, we are now going to go to the SageMaker service, and SageMaker Studio is a big service with a lot of buttons and knobs and levers that you can pull and press and twist in order to get to do different things. We want this to be a pretty simple default setup. 

So we are going to go over here under the new SageMaker heading and it says, quick setup for a single user. That sounds like what we want. A quick setup for a individual user. Click that button set up for a single user and the setup is in progress. It'll take a few minutes to set up the domain, but through the magic of television, Ooh, what's this era that I've got here? Resourcing use, that's okay. Dunno why that came up, but it looks like it's all preparing. Anyway, we'll find out in a few minutes, but as I was saying, this will take a couple of minutes to spin up, but through the magic of tv, we are going to fast forward through this and I'll be back once this is set up so we can get on with our SageMaker studio set up for our demos. 

Alright, so our SageMaker studio domain has finished creating, it took about 10 minutes to create, just to give you a bit of an idea about how long you'll need to wait for in order to launch it. We will click our quick setup domain, which has the date here. As you can see, that's how you can identify them. If you create multiple and we have a default user, we're going to go over to launch and we will click studio and this will open a new tab directing us to our SageMaker studio domain. And here we are. So we will be doing all of our demos, all of our code demos, I should say in Jupiter Lab. We'll click view Jupiter Lab Spaces, and let's just make this a little bigger so it's easier for you to see there. We'll click view Jupiter lab spaces. And right now we do not have any Jupiter lab spaces, so we need to create one. We'll click the button up here, create Jupiter Lab space. We'll give it a name. I'm going to call it Jen Ai demos, create Space. You can call it whatever you like. By the way, create space. 

We can see that our space is creating. You see it says updating there. This won't take very long. There we go. That's ready to go. So now if we go back over here, so we're in this interface, but in the future when you come into Jupiter Lab, you'll see it's listed here in this or kind of list and you need to click run. That will start the Jupiter lab space. Now, just for future reference, if you are intending to follow along with the demos in the course or do them in the future, make sure you start your Jupiter lab space probably before you get into the swing of the course because it just will take a couple of moments to start. You'll see it'll take a few minutes to start here. And also make sure when you are done, we are following the demos for the day you stop the Jupiter lab space because otherwise you'll continue to be charged for it so you're only charged when it's running. And also for the storage space that you are occupying. The storage space for this course is pretty minimal, but if you leave that running, you could accrue cost that you might not want to accrue, and the way that you stop it is simply clicking the stop button there. It's running. Now let's open our Jupiter lab space. We click the open button, it'll open another tab which has our Jupiter lab space. 



This won't take a minute. Talk amongst yourselves. And here we are. Let's make this a little bit bigger. So possibly the most important thing that we want to do before we go any further is change this into dark mode. I find that a bit easier to see. So if we go to settings theme, we can go to Jupiter Lab Dark. Alright, now we are super ready to do all of our coding that we're in dark mode. Of course, you don't need to change to dark mode. That's just a personal preference. You can see there's a variety of themes that you can choose up here. So light or dark, I personally prefer dark though. The next thing that we need to do is upload all of the demo files into Jupiter Lab. So you'll see attached to this video in the description, there is a zip file called Gen AI course demos that contains all of the Jupiter notebooks for this course. So we need to upload that. I have that on my computer just here, so I'm going to drag that across and pop it in here. 

So we can see that we have our Gen AI course file uploaded there. And the next thing we need to do is unzip that so we can get all of the Jupiter notebooks. In order to do that, we are going to create a new terminal, and if we type Ls, we can see our course demo zip file. We're going to do unzip gen AI course demos, zip, and you'll see that it extracts all of the files into our Jupiter lab. There we go. We can see they're all extracted. Now the one last thing that we need to do set up wise in Jupiter Lab is change some of the settings for the linter. So the default linter in Jupiter will start underlining lots of lines due to it, considering there being spacing issues in the files. So we actually want to turn that off. The way that we need to do this is it is a little bit involved. We're going to go to the settings menu and then go all the way down to the bottom to the settings editor. 

Over in the left hand side, we are going to go to Code Diagnostics and scroll to the bottom and disable this feature. So that's now disabled. The next thing we need to do is actually put some custom js in to disable one of the features of the linter to stop it from underlining many lines of our code. It's actually up here in the top right hand corner, Jason settings editor, and we need to select a plugin from the list. So that is going to be the language servers, and we can see the system defaults here, which are all the default settings for the language server or the code linter over here. We can override that with some of our own preferences. So you'll notice there's some code accompanying this video that we want to paste in. I have it here for ease of reference, and I'm going to put that in just like that. I'm going to save by closing that, clicking that little save icon first and close that and I can now close all of the tabs. 

 

And our code now opens without being underlined absolutely everywhere. So that concludes the setup of SageMaker Studio. Now we have one last little bit of setup to do. I'm going to leave this open because I'm going to be showing you a few more demos shortly. But I'm going to go back to my AWS console, and in one of the demos, it's actually the final demo of the course. What we're going to be doing is using React and a tool. Now don't worry if you don't understand what that is yet. You'll be learning about that during the course, but we're going to be using the React framework and a tool to generate code that uses the BOTO three, the Python SDK, to find any EC2 instances with the name Delete. So we need to create an EC2 instance with the name Delete in order for our tool to find it. During that demo, we're going to go to EC2, launch an instance. We'll call the instance, delete, 



Select all of the defaults here. Don't even worry about changing anything else. Proceed without a key pair. We're not going to need to use this EC2. In fact, we're immediately going to shut it down. So it doesn't cost us any money for being running. We just literally need it to exist. So just accept all the defaults launch the instance. This won't take but a moment. We've launched our instance. If we go over to instances, we can see that here in a pending state. We'll just wait for that to go into a running state, just so it goes through all of its launch checks and everything before we shut it down. But essentially, we're going to shut it down straight away so it doesn't cost us any ongoing money for being running, but it still will allow our demo at the end of the course to be able to find this EC2 in our account. So it's running and we're just immediately going to stop the instance. And there we go. That concludes our setup for the demos of the course. I hope that you're really excited to continue with the demos as we go through this course, and I'll see you in our next module very shortly.